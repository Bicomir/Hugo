<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Wallis</title>
    <link>https://bomir.top/post/</link>
    <description>Recent content in Posts on Wallis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 09 May 2021 22:19:05 +0000</lastBuildDate><atom:link href="https://bomir.top/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker底层原理介绍</title>
      <link>https://bomir.top/post/docker-storage/</link>
      <pubDate>Fri, 12 Feb 2021 21:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/docker-storage/</guid>
      <description>docker底层原理介绍 namespace和cgroup的简单理解 namespace:类似于编程语言的的命名空间 controll groups ： controll （system res</description>
    </item>
    
    <item>
      <title>浅谈基于redis的分布式锁</title>
      <link>https://bomir.top/post/base-redis-distributedlock/</link>
      <pubDate>Tue, 12 Jan 2021 21:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/base-redis-distributedlock/</guid>
      <description>一、介绍 这篇博文讲介绍如何一步步构建一个基于Redis的分布式锁。会从最原始的版本开始，然后根据问题进行调整，最后完成一个较为合理的分布式锁</description>
    </item>
    
    <item>
      <title>MySQL MVCC简单理解</title>
      <link>https://bomir.top/post/mysql-mvcc/</link>
      <pubDate>Sun, 09 May 2021 22:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/mysql-mvcc/</guid>
      <description>什么是MVCC？ MVCC，全称Multi-Version Concurrency Control，即多版本并发控制。MVCC是一种并发控制的方法，一般在数据库管理系</description>
    </item>
    
    <item>
      <title>DNS相关问题</title>
      <link>https://bomir.top/post/dns-related-new/</link>
      <pubDate>Wed, 17 Feb 2021 18:56:34 +0000</pubDate>
      
      <guid>https://bomir.top/post/dns-related-new/</guid>
      <description>DNS 因特网上的主机，可以使用多种方式标识，比如主机名或IP地址。 一种标识方法就是用它的主机名（hostname），比如·www.baidu.c</description>
    </item>
    
    <item>
      <title>Go http.Handler接口</title>
      <link>https://bomir.top/post/go-http-handler/</link>
      <pubDate>Wed, 03 Feb 2021 18:56:34 +0000</pubDate>
      
      <guid>https://bomir.top/post/go-http-handler/</guid>
      <description>Golang http.Handler接口 摘自《GO语言圣经》第7章 学习笔记 我们尝试对那些http.Handler接口的服务器API做更进一步的学习： net/http</description>
    </item>
    
    <item>
      <title>Go递归的处理HTML</title>
      <link>https://bomir.top/post/recursive-to-html/</link>
      <pubDate>Sat, 23 Jan 2021 18:56:34 +0000</pubDate>
      
      <guid>https://bomir.top/post/recursive-to-html/</guid>
      <description>Golang 递归处理HTML 摘自《Go语言圣经》第五章 函数可以是递归的，这意味着函数可以直接或间接的调用自身。对许多问题而言，递归是一种强有力的技术，</description>
    </item>
    
    <item>
      <title>defer和panic的执行顺序</title>
      <link>https://bomir.top/post/defer-panic-order/</link>
      <pubDate>Wed, 20 Jan 2021 18:56:34 +0000</pubDate>
      
      <guid>https://bomir.top/post/defer-panic-order/</guid>
      <description>​ 之前碰到的一个Golang面试题，关于defer和panic的执行顺序究竟是怎么样的，到底谁先执行谁后执行 ，来回顾验证学习一下； Defer, panic 和 recover Defer</description>
    </item>
    
    <item>
      <title>etech面试模拟</title>
      <link>https://bomir.top/post/etech-interview/</link>
      <pubDate>Sun, 17 Jan 2021 18:56:34 +0000</pubDate>
      
      <guid>https://bomir.top/post/etech-interview/</guid>
      <description>Interview Mock 一面 A （1）TCP三次握手和四次挥手，以及为什么要挥手4次呢？ 首先来理解一下TCP的报文格式： 序列号seq：占4个字节，用来标记数据段的</description>
    </item>
    
    <item>
      <title>Docker基础篇</title>
      <link>https://bomir.top/post/docker-basic/</link>
      <pubDate>Fri, 08 Jan 2021 21:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/docker-basic/</guid>
      <description>Docker基础篇 第一章 Docker简介 是什么？ 问题：为什么会有 docker 的出现 一款产 品从开发到上线，从操作系统，到运行环境，再到应用配置。作为开发</description>
    </item>
    
    <item>
      <title>redis面试连环炮I</title>
      <link>https://bomir.top/post/redis-interview-1/</link>
      <pubDate>Sat, 21 Nov 2020 22:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/redis-interview-1/</guid>
      <description>Redis的面试连环炮I 面试题 Redis和Memcache有什么区别 Redis的线程模型是什么？ Redis的数据类型及应用场景？ 为什么单线程</description>
    </item>
    
    <item>
      <title>Linux top命令学习</title>
      <link>https://bomir.top/post/top-command-learn/</link>
      <pubDate>Sun, 15 Nov 2020 22:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/top-command-learn/</guid>
      <description>之前的学习过程中， 对Linux的top命令老是一知半解，然后也不能很清楚的知道各项参数的含义，特地去学习一下然后记录； Top命令 我们平时会部</description>
    </item>
    
    <item>
      <title>消息队列记录</title>
      <link>https://bomir.top/post/message-queue-record/</link>
      <pubDate>Fri, 13 Nov 2020 21:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/message-queue-record/</guid>
      <description>消息队列的面试连环炮 前言 你用过消息队列么？ 说说你们项目里是怎么用消息队列的？ 我们有一个订单系统，订单系统会每次下一个新订单的时候，就会发送一</description>
    </item>
    
    <item>
      <title>MySQL复习整理</title>
      <link>https://bomir.top/post/mysql-record/</link>
      <pubDate>Thu, 12 Nov 2020 22:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/mysql-record/</guid>
      <description>1.MySQL环境 1.1.环境安装 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 # 查看Lin</description>
    </item>
    
    <item>
      <title>常用设计模式-5种创建型模式</title>
      <link>https://bomir.top/post/common-design-pattern-five-constructionmode/</link>
      <pubDate>Thu, 15 Oct 2020 20:51:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/common-design-pattern-five-constructionmode/</guid>
      <description>设计模式 ​ — 可复用面向对象软件的基础 总体来说， 设计模式主要分为三大类： 创建型模式： 共5种： 工厂方法模式， 抽象工厂模式， 单例模式， 建造者模式，</description>
    </item>
    
    <item>
      <title>了解redis</title>
      <link>https://bomir.top/post/redis-basic1/</link>
      <pubDate>Mon, 12 Oct 2020 22:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/redis-basic1/</guid>
      <description>Redis.conf详解 1.配置文件 unit单位对大小写不敏感； 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # 1) The server is not binding explicitly to a set of addresses using the # &amp;#34;bind&amp;#34; directive. # 2) No</description>
    </item>
    
    <item>
      <title>了解微服务架构</title>
      <link>https://bomir.top/post/microservices-structure/</link>
      <pubDate>Fri, 25 Sep 2020 22:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/microservices-structure/</guid>
      <description>P1 - 什么是微服务架构？ Loosely Coupled （松耦合） Service Oriented architecture（基于SOA架构） with bounded Context（有界上下文，局部状态；每个团队可以管理</description>
    </item>
    
    <item>
      <title>RabbitMQ入门之Go语言教程-(2)</title>
      <link>https://bomir.top/post/rabbit-go-2/</link>
      <pubDate>Tue, 11 Aug 2020 21:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/rabbit-go-2/</guid>
      <description>RabbitMQ官网的消息模型的第二种-Work Queue（工作队列）； 第二种模型（Work Queue） 介绍 Work queues, 也被称为(Task queues), 任务模型</description>
    </item>
    
    <item>
      <title>RabbitMQ入门之Go语言教程-(1)</title>
      <link>https://bomir.top/post/rabbit-go-1/</link>
      <pubDate>Fri, 31 Jul 2020 21:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/rabbit-go-1/</guid>
      <description>《RabbitMQ入门之Go语言教程》(1) Hello World RabbitMQ是一个开源的、使用最广的消息转发器。提供匿名消息类型，可使用多种消息协议、消</description>
    </item>
    
    <item>
      <title>RabbitMQ入门基础</title>
      <link>https://bomir.top/post/rabbitmq-basic/</link>
      <pubDate>Tue, 21 Jul 2020 21:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/rabbitmq-basic/</guid>
      <description>RabbitMQ简介 RabbitMQ是一个开源的消息代理的队列服务器，用来通过普通协议在完全不同的应用之间共享数据。 RabbitMQ是使用E</description>
    </item>
    
    <item>
      <title>MySQL优化笔记</title>
      <link>https://bomir.top/post/mysql-ehancement/</link>
      <pubDate>Sun, 12 Jul 2020 22:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/mysql-ehancement/</guid>
      <description>MySQL 分层、存储引擎 mysql 分层 连接层 提供与客户端连接的服务 服务层 提供各种用户使用的接口 提供 SQL 优化器（MySQL Query Optimizer） 引擎层 提供各种存</description>
    </item>
    
  </channel>
</rss>
