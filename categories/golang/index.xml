<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Wallis</title>
    <link>https://bomir.top/categories/golang/</link>
    <description>Recent content in Golang on Wallis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 03 Feb 2021 18:56:34 +0000</lastBuildDate><atom:link href="https://bomir.top/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go http.Handler接口</title>
      <link>https://bomir.top/post/go-http-handler/</link>
      <pubDate>Wed, 03 Feb 2021 18:56:34 +0000</pubDate>
      
      <guid>https://bomir.top/post/go-http-handler/</guid>
      <description>Golang http.Handler接口 摘自《GO语言圣经》第7章 学习笔记 我们尝试对那些http.Handler接口的服务器API做更进一步的学习： net/http</description>
    </item>
    
    <item>
      <title>Go递归的处理HTML</title>
      <link>https://bomir.top/post/recursive-to-html/</link>
      <pubDate>Sat, 23 Jan 2021 18:56:34 +0000</pubDate>
      
      <guid>https://bomir.top/post/recursive-to-html/</guid>
      <description>Golang 递归处理HTML 摘自《Go语言圣经》第五章 函数可以是递归的，这意味着函数可以直接或间接的调用自身。对许多问题而言，递归是一种强有力的技术，</description>
    </item>
    
    <item>
      <title>defer和panic的执行顺序</title>
      <link>https://bomir.top/post/defer-panic-order/</link>
      <pubDate>Wed, 20 Jan 2021 18:56:34 +0000</pubDate>
      
      <guid>https://bomir.top/post/defer-panic-order/</guid>
      <description>​ 之前碰到的一个Golang面试题，关于defer和panic的执行顺序究竟是怎么样的，到底谁先执行谁后执行 ，来回顾验证学习一下； Defer, panic 和 recover Defer</description>
    </item>
    
  </channel>
</rss>
