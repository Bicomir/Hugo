<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSharp on Wallis</title>
    <link>https://bomir.top/categories/csharp/</link>
    <description>Recent content in CSharp on Wallis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 12 Sep 2020 22:19:05 +0000</lastBuildDate><atom:link href="https://bomir.top/categories/csharp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>改善C#代码的157个建议（12）- 规范开发行为</title>
      <link>https://bomir.top/post/standardize-development-behavior/</link>
      <pubDate>Sat, 12 Sep 2020 22:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/standardize-development-behavior/</guid>
      <description>规范开发行为 建议154：不要过度设计，在敏捷中体会重构的乐趣 在以下几个情形， 我们不得不更改软件的设计： 如果项目是针对某个大型机构的，不同级别</description>
    </item>
    
    <item>
      <title>.netcore之核心组件</title>
      <link>https://bomir.top/post/netcore3-readnote-1/</link>
      <pubDate>Sun, 12 Jul 2020 22:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/netcore3-readnote-1/</guid>
      <description>netCore3从入门到实战-读书笔记-1 .netcore核心组件 .netcore提供了一组内置的组件来帮助开发者来实现一个应用程序的基本功</description>
    </item>
    
    <item>
      <title>.netcore垃圾回收</title>
      <link>https://bomir.top/post/netcore-garbagecollection/</link>
      <pubDate>Sun, 28 Jun 2020 22:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/netcore-garbagecollection/</guid>
      <description>.NetCore垃圾收集 在本节中，我们将介绍垃圾收集的概念，垃圾收集是.NET托管代码平台最重要的特性之一。 垃圾收集器(GC)管理内存的分配</description>
    </item>
    
    <item>
      <title>.netcore之Program类</title>
      <link>https://bomir.top/post/net-core-program_class/</link>
      <pubDate>Mon, 25 May 2020 22:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/net-core-program_class/</guid>
      <description>ASP.NET Core 启动和配置 Program类，Main方法 Startup类 其中很核心的思想是(Dependency Injection，依赖注入)； 还有Io</description>
    </item>
    
    <item>
      <title>.netcore之Startup类</title>
      <link>https://bomir.top/post/net-core-startup_class/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://bomir.top/post/net-core-startup_class/</guid>
      <description>Startup 类：注册服务和使用中间件** Startup类默认生成了两个方法，在这个类中主要负责注册服务和使用中间件。 Startup类的源码 在下面的源码</description>
    </item>
    
    <item>
      <title>C#杂项聊一聊</title>
      <link>https://bomir.top/post/csharp-others-talk/</link>
      <pubDate>Sun, 10 Nov 2019 18:56:34 +0000</pubDate>
      
      <guid>https://bomir.top/post/csharp-others-talk/</guid>
      <description>C#是怎么跑起来的 C#源代码生成IL（中间语言）， CLR（公共语言运行时）翻译成 机器指令： 坏处 慢， 运行时， IL更易读更容易反编译 好处 跨平台 承</description>
    </item>
    
    <item>
      <title>改善C#代码的157个建议（2）- 异步，多线程，任务和并行</title>
      <link>https://bomir.top/post/async-multithread-taskandparallel/</link>
      <pubDate>Wed, 23 Oct 2019 22:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/async-multithread-taskandparallel/</guid>
      <description>本节内容 ​ 软件开发过程中， 多线程编码方面的工作看起来比较棘手的；由多线程的 传值、取值、资源同步、线程暂停、取消等操作会困扰每一个尝试编写此类</description>
    </item>
    
    <item>
      <title>改善C#代码的157个建议（1）- 基本要素</title>
      <link>https://bomir.top/post/basic-language-elements/</link>
      <pubDate>Sat, 12 Oct 2019 22:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/basic-language-elements/</guid>
      <description>章节内容概要 如何操作字符串？ 如何进行转型？ 什么是clone? 什么是相等型？ 为什么需要Hashcode? 使用一门语言编程的时候，就应该会遇到到</description>
    </item>
    
    <item>
      <title>C#语法回顾I</title>
      <link>https://bomir.top/post/csharp-basic/</link>
      <pubDate>Sat, 24 Aug 2019 22:19:05 +0000</pubDate>
      
      <guid>https://bomir.top/post/csharp-basic/</guid>
      <description>C# 重载与重写 基本定义 构造函数： 构造函数是一种特殊的方法，主要用来创建对象时初始化对象，即为对象成员变量赋初始值，总与new运算符一起使用再创</description>
    </item>
    
  </channel>
</rss>
